{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react\\\\hello-react\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Button, Rate, TreeSelect, Table, Tag, Space } from 'antd';\nimport 'antd/dist/antd.css';\nconst {\n  TreeNode\n} = TreeSelect;\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'name',\n  render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 25\n  }, this)\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  key: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: 'Tags',\n  key: 'tags',\n  dataIndex: 'tags',\n  render: tags => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tags.map(tag => {\n      let color = tag.length > 5 ? 'geekblue' : 'green';\n\n      if (tag === 'loser') {\n        color = 'volcano';\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: tag.toUpperCase()\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false)\n}, {\n  title: 'Action',\n  key: 'action',\n  render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n    size: \"middle\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      children: [\"Invite \", record.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this)\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park',\n  tags: ['nice', 'developer']\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park',\n  tags: ['loser']\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park',\n  tags: ['cool', 'teacher']\n}];\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: undefined\n    };\n\n    this.onChange = value => {\n      console.log(value);\n      this.setState({\n        value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        children: \"Primary Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        children: \"Primary Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Rate, {\n        allowHalf: true,\n        defaultValue: 2.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TreeSelect, {\n        showSearch: true,\n        style: {\n          width: '50%'\n        },\n        value: this.state.value,\n        dropdownStyle: {\n          maxHeight: 400,\n          overflow: 'auto'\n        },\n        placeholder: \"Please select\",\n        allowClear: true,\n        treeDefaultExpandAll: true,\n        onChange: this.onChange,\n        children: /*#__PURE__*/_jsxDEV(TreeNode, {\n          value: \"parent 1\",\n          title: \"parent 1\",\n          children: [/*#__PURE__*/_jsxDEV(TreeNode, {\n            value: \"parent 1-0\",\n            title: \"parent 1-0\",\n            children: [/*#__PURE__*/_jsxDEV(TreeNode, {\n              value: \"leaf1\",\n              title: \"my leaf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TreeNode, {\n              value: \"leaf2\",\n              title: \"your leaf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TreeNode, {\n            value: \"parent 1-1\",\n            title: \"parent 1-1\",\n            children: /*#__PURE__*/_jsxDEV(TreeNode, {\n              value: \"sss\",\n              title: /*#__PURE__*/_jsxDEV(\"b\", {\n                style: {\n                  color: '#08c'\n                },\n                children: \"sss\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/react/hello-react/src/App.js"],"names":["React","Component","Button","Rate","TreeSelect","Table","Tag","Space","TreeNode","columns","title","dataIndex","key","render","text","tags","map","tag","color","length","toUpperCase","record","name","data","age","address","App","state","value","undefined","onChange","console","log","setState","width","maxHeight","overflow"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button,Rate,TreeSelect,Table, Tag, Space} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nconst { TreeNode } = TreeSelect;\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n    },\r\n    {\r\n        title: 'Tags',\r\n        key: 'tags',\r\n        dataIndex: 'tags',\r\n        render: tags => (\r\n            <>\r\n                {tags.map(tag => {\r\n                    let color = tag.length > 5 ? 'geekblue' : 'green';\r\n                    if (tag === 'loser') {\r\n                        color = 'volcano';\r\n                    }\r\n                    return (\r\n                        <Tag color={color} key={tag}>\r\n                            {tag.toUpperCase()}\r\n                        </Tag>\r\n                    );\r\n                })}\r\n            </>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n            <Space size=\"middle\">\r\n                <a>Invite {record.name}</a>\r\n                <a>Delete</a>\r\n            </Space>\r\n        ),\r\n    },\r\n];\r\n\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        name: 'John Brown',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park',\r\n        tags: ['nice', 'developer'],\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        address: 'London No. 1 Lake Park',\r\n        tags: ['loser'],\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Joe Black',\r\n        age: 32,\r\n        address: 'Sidney No. 1 Lake Park',\r\n        tags: ['cool', 'teacher'],\r\n    },\r\n];\r\nexport default class App extends Component {\r\n    state = {\r\n        value: undefined,\r\n    };\r\n\r\n    onChange = value => {\r\n        console.log(value);\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <Button type=\"primary\">Primary Button</Button>\r\n                <Button type=\"link\">Primary Button</Button>\r\n                <Rate allowHalf defaultValue={2.5} />\r\n                <TreeSelect\r\n                    showSearch\r\n                    style={{ width: '50%' }}\r\n                    value={this.state.value}\r\n                    dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                    placeholder=\"Please select\"\r\n                    allowClear\r\n                    treeDefaultExpandAll\r\n                    onChange={this.onChange}\r\n                >\r\n                    <TreeNode value=\"parent 1\" title=\"parent 1\">\r\n                        <TreeNode value=\"parent 1-0\" title=\"parent 1-0\">\r\n                            <TreeNode value=\"leaf1\" title=\"my leaf\" />\r\n                            <TreeNode value=\"leaf2\" title=\"your leaf\" />\r\n                        </TreeNode>\r\n                        <TreeNode value=\"parent 1-1\" title=\"parent 1-1\">\r\n                            <TreeNode value=\"sss\" title={<b style={{ color: '#08c' }}>sss</b>} />\r\n                        </TreeNode>\r\n                    </TreeNode>\r\n                </TreeSelect>\r\n                <hr/>\r\n                <Table columns={columns} dataSource={data} />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}