{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react\\\\hello-react\\\\src\\\\ErrorBoundary.jsx\";\nimport React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 更新 state 使下一次渲染能够显示降级后的 UI\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // 你同样可以将错误日志上报给服务器\n    // eslint-disable-next-line no-undef\n    logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // 你可以自定义降级后的 UI 并渲染\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Something went wrong.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["D:/react/hello-react/src/ErrorBoundary.jsx"],"names":["React","Component","ErrorBoundary","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","logErrorToMyService","render","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,QAAQ,EAAC;AADF,KAAX;AAGH;;AACD,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACnC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACH;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB;AAChC;AACA;AACAC,IAAAA,mBAAmB,CAACH,KAAD,EAAQE,SAAR,CAAnB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKP,KAAL,CAAWC,QAAf,EAAyB;AACrB;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,WAAO,KAAKF,KAAL,CAAWS,QAAlB;AACH;;AAxBiC;;AA2BtC,eAAeX,aAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n    static getDerivedStateFromError(error) {\r\n        // 更新 state 使下一次渲染能够显示降级后的 UI\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // 你同样可以将错误日志上报给服务器\r\n        // eslint-disable-next-line no-undef\r\n        logErrorToMyService(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // 你可以自定义降级后的 UI 并渲染\r\n            return <h1>Something went wrong.</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}