{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react\\\\hello-react\\\\src\\\\ErrorBoundary.jsx\";\nimport React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: '错误',\n      errorInfo: '错误信息'\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u51FA\\u9519\\u4E86\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: [this.state.error && this.state.error.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), this.state.errorInfo.componentStack]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\n\nclass BuggyCounter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(({\n      counter\n    }) => ({\n      counter: counter + 1\n    }));\n  }\n\n  render() {\n    if (this.state.counter === 5) {\n      // Simulate a JS error\n      throw new Error('出错了了了了了了了了');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: this.handleClick,\n      children: this.state.counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default function ErrorBoundary_test() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"\\u8FD9\\u662FReact 16\\u4E2D\\u9519\\u8BEF\\u8FB9\\u754C\\u7684\\u793A\\u4F8B\\u3002\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this), \"\\u5355\\u51FB\\u6570\\u5B57\\u4EE5\\u589E\\u52A0\\u8BA1\\u6570\\u5668\\u3002\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), \"The counter is programmed to throw when it reaches 5. This simulates a JavaScript error in a component.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"These two counters are inside the same error boundary. If one crashes, the error boundary will replace both of them.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuggyCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuggyCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"These two counters are each inside of their own error boundary. So if one crashes, the other is not affected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(BuggyCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: /*#__PURE__*/_jsxDEV(BuggyCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_c = ErrorBoundary_test;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorBoundary_test\");","map":{"version":3,"sources":["D:/react/hello-react/src/ErrorBoundary.jsx"],"names":["React","ErrorBoundary","Component","constructor","props","state","error","errorInfo","componentDidCatch","setState","render","whiteSpace","toString","componentStack","children","BuggyCounter","counter","handleClick","bind","Error","ErrorBoundary_test"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: '错误', errorInfo: '错误信息' };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Catch errors in any components below and re-render with error message\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            // Error path\r\n            return (\r\n                <div>\r\n                    <h2>出错了</h2>\r\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                        <br />\r\n                        {this.state.errorInfo.componentStack}\r\n                    </details>\r\n                </div>\r\n            );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nclass BuggyCounter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { counter: 0 };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(({counter}) => ({\r\n            counter: counter + 1\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        if (this.state.counter === 5) {\r\n            // Simulate a JS error\r\n            throw new Error('出错了了了了了了了了');\r\n        }\r\n        return <h1 onClick={this.handleClick}>{this.state.counter}</h1>;\r\n    }\r\n}\r\n\r\nexport default function ErrorBoundary_test() {\r\n    return (\r\n        <div>\r\n            <p>\r\n                <b>\r\n                    这是React 16中错误边界的示例。\r\n                    <br /><br />\r\n                    单击数字以增加计数器。\r\n                    <br />\r\n                    The counter is programmed to throw when it reaches 5. This simulates a JavaScript error in a component.\r\n                </b>\r\n            </p>\r\n            <hr />\r\n            <ErrorBoundary>\r\n                <p>These two counters are inside the same error boundary. If one crashes, the error boundary will replace both of them.</p>\r\n                <BuggyCounter />\r\n                <BuggyCounter />\r\n            </ErrorBoundary>\r\n            <hr />\r\n            <p>These two counters are each inside of their own error boundary. So if one crashes, the other is not affected.</p>\r\n            <ErrorBoundary><BuggyCounter /></ErrorBoundary>\r\n            <ErrorBoundary><BuggyCounter /></ErrorBoundary>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}